services:
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: pango-api
    image: node:22-alpine
    restart: always
    env_file:
      - ./server/.env
    ports:
      - "3000:3000"
    depends_on:
       - db
    working_dir: /app
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    stdin_open: true
    tty: true


  # client:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: pango-frontend
  #   restart: always
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./nginx/conf/:/etc/nginx/conf.d/:ro
  #     - ./certbot/www/:/var/www/certbot/:ro
  #   environment:
  #     - API_URL=${API_URL}
  webserver:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www/:/var/www/certbot/:ro
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
  db:
    container_name: pango-postgres
    image: postgres:16-alpine
    env_file: ./server/.env
    restart: always
    ports:
      - '8001:5432'
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=@Webdisigner1996
      - POSTGRES_DB=pangotest


volumes:
  data: